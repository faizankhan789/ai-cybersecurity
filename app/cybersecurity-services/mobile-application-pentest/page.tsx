"use client"

import { useState } from "react"
import Link from "next/link"
import Image from "next/image"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/badge"
import { ArrowRight, Smartphone, Shield, Lock, CheckCircle, Download, Upload } from "lucide-react"

const platforms = [
  {
    id: "android",
    title: "Android Application Testing",
    description: "Comprehensive security testing for Android applications across all versions.",
    icon: <Smartphone className="h-8 w-8 text-green-600" />,
    vulnerabilities: [
      "Insecure data storage",
      "Weak cryptography implementation",
      "Insecure communication protocols",
      "Improper platform usage",
      "Insufficient authentication mechanisms",
      "Code tampering vulnerabilities",
      "Reverse engineering susceptibility",
      "Extraneous functionality exposure",
    ],
    tools: ["MobSF", "Drozer", "JADX", "Frida", "Objection", "RMS", "Inspeckage"],
  },
  {
    id: "ios",
    title: "iOS Application Testing", 
    description: "In-depth security assessment for iOS applications and enterprise deployments.",
    icon: <Smartphone className="h-8 w-8 text-blue-600" />,
    vulnerabilities: [
      "Keychain security issues",
      "Certificate pinning bypass",
      "Jailbreak detection bypass",
      "Runtime application self protection",
      "Binary protection mechanisms",
      "Network communication flaws",
      "Local authentication bypass",
      "Privacy control violations",
    ],
    tools: ["MobSF", "Frida", "Objection", "Cycript", "Class-dump", "Theos", "Liberty Lite"],
  },
  {
    id: "hybrid",
    title: "Hybrid & Cross-Platform",
    description: "Security testing for React Native, Flutter, Xamarin, and Ionic applications.",
    icon: <Smartphone className="h-8 w-8 text-purple-600" />,
    vulnerabilities: [
      "WebView security misconfigurations",
      "Bridge communication vulnerabilities",
      "Plugin security flaws",
      "JavaScript injection attacks",
      "Cordova/PhoneGap specific issues",
      "Native bridge exploitation",
      "Cross-platform data leakage",
      "Framework-specific weaknesses",
    ],
    tools: ["MobSF", "Quark", "Frida", "Objection", "WebView debugger", "Pidcat"],
  },
]

const testingCategories = [
  {
    category: "Static Analysis",
    description: "Code review and binary analysis without executing the application",
    tests: [
      "Source code security review",
      "Binary analysis and reverse engineering",
      "Third-party library vulnerability assessment",
      "Code obfuscation evaluation",
      "Hardcoding sensitive information detection",
      "Permission analysis",
    ]
  },
  {
    category: "Dynamic Analysis",
    description: "Runtime testing while the application is executing",
    tests: [
      "Network traffic analysis",
      "Runtime manipulation testing",
      "Memory analysis and debugging",
      "File system interaction monitoring",
      "API endpoint security testing",
      "Authentication bypass attempts",
    ]
  },
  {
    category: "Interactive Testing",
    description: "Manual testing with user interaction simulation",
    tests: [
      "Business logic flaw identification",
      "Session management testing",
      "Input validation assessment",
      "User interface security review",
      "Social engineering attack vectors",
      "Physical device security testing",
    ]
  }
]

const tools = [
  { name: "Mobile Security Framework (MobSF)", category: "Static/Dynamic Analysis", logo: "/placeholder.svg?height=60&width=120" },
  { name: "Frida", category: "Dynamic Analysis", logo: "/placeholder.svg?height=60&width=120" },
  { name: "Objection", category: "Runtime Manipulation", logo: "/placeholder.svg?height=60&width=120" },
  { name: "Drozer", category: "Android Security", logo: "/placeholder.svg?height=60&width=120" },
  { name: "JADX", category: "Android Decompiler", logo: "/placeholder.svg?height=60&width=120" },
  { name: "Inspeckage", category: "Android Analysis", logo: "/placeholder.svg?height=60&width=120" },
  { name: "RMS (Runtime Mobile Security)", category: "Runtime Analysis", logo: "/placeholder.svg?height=60&width=120" },
  { name: "Quark", category: "Android Malware Analysis", logo: "/placeholder.svg?height=60&width=120" },
  { name: "Pidcat", category: "Android Logging", logo: "/placeholder.svg?height=60&width=120" },
]

const pricingTiers = [
  {
    name: "Single App Test",
    description: "Comprehensive testing for one mobile application",
    price: "$3,500",
    period: "per app",
    features: [
      "Static & dynamic analysis",
      "OWASP Mobile Top 10 testing",
      "Platform-specific vulnerability testing",
      "Basic business logic testing",
      "Technical report with remediation",
      "30-day support for fixes",
    ],
    cta: "Get Started",
    popular: false,
  },
  {
    name: "Multi-Platform Suite",
    description: "Testing for iOS, Android, and web components",
    price: "$8,500",
    period: "per app suite",
    features: [
      "Cross-platform security testing",
      "API backend testing included",
      "Advanced runtime manipulation",
      "Business logic deep-dive testing",
      "Executive & technical reports",
      "60-day remediation support",
      "Retest after fixes included",
    ],
    cta: "Most Popular",
    popular: true,
  },
  {
    name: "Enterprise Mobile Security",
    description: "Ongoing mobile application security program",
    price: "Custom",
    period: "pricing",
    features: [
      "Multiple application testing",
      "Quarterly security assessments",
      "Mobile DevSecOps integration",
      "Custom tool development",
      "Staff training and workshops",
      "24/7 security consultation",
      "Compliance reporting",
    ],
    cta: "Contact Sales",
    popular: false,
  },
]

export default function MobileAppPentestPage() {
  const [selectedFile, setSelectedFile] = useState<File | null>(null)
  const [isAnalyzing, setIsAnalyzing] = useState(false)
  const [analysisResults, setAnalysisResults] = useState<{
    platform: string
    riskScore: number
    vulnerabilities: Array<{
      severity: "Critical" | "High" | "Medium" | "Low"
      title: string
      description: string
      category: string
    }>
  } | null>(null)

  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0]
    if (file) {
      setSelectedFile(file)
      setAnalysisResults(null)
    }
  }

  const handleAnalysis = () => {
    if (!selectedFile) return

    setIsAnalyzing(true)
    setAnalysisResults(null)

    // Simulate analysis
    setTimeout(() => {
      setIsAnalyzing(false)
      const platform = selectedFile.name.endsWith('.apk') ? 'Android' : 'iOS'
      setAnalysisResults({
        platform,
        riskScore: Math.floor(Math.random() * 30) + 70,
        vulnerabilities: [
          {
            severity: "High",
            title: "Insecure Data Storage",
            description: "Sensitive data stored in unencrypted local database",
            category: "Data Protection"
          },
          {
            severity: "Medium",
            title: "Certificate Pinning Missing",
            description: "Application does not implement certificate pinning",
            category: "Network Security"
          },
          {
            severity: "Low",
            title: "Debug Mode Enabled",
            description: "Application has debug flags enabled in production",
            category: "Code Quality"
          }
        ]
      })
    }, 4000)
  }

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case "Critical": return "text-purple-600 bg-purple-100"
      case "High": return "text-red-600 bg-red-100"
      case "Medium": return "text-orange-600 bg-orange-100"
      case "Low": return "text-yellow-600 bg-yellow-100"
      default: return "text-gray-600 bg-gray-100"
    }
  }

  return (
    <main className="flex flex-col min-h-screen">
      {/* Hero Section */}
      <section className="bg-gradient-to-br from-[#1A1A1A] to-[#3A0000] text-white py-20 px-4">
        <div className="container mx-auto max-w-6xl">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <div>
              <h1 className="text-4xl md:text-5xl font-bold font-mono mb-6">
                Mobile Application Security Testing
              </h1>
              <p className="text-xl mb-8 max-w-lg">
                Comprehensive security assessment for Android and iOS applications. OWASP Mobile Top 10 compliant testing with advanced runtime analysis and static code review.
              </p>
              <div className="flex flex-wrap gap-4">
                <Button asChild size="lg" variant="destructive" className="group">
                  <Link href="#demo">
                    Free App Analysis
                    <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
                  </Link>
                </Button>
                <Button
                  asChild
                  size="lg"
                  variant="outline"
                  className="bg-transparent border-white text-white hover:bg-white/10"
                >
                  <Link href="#pricing">View Pricing</Link>
                </Button>
              </div>
            </div>
            <div className="relative h-[400px] hidden lg:block">
              <div className="absolute inset-0 flex items-center justify-center">
                <div className="relative">
                  {/* Phone mockups */}
                  <div className="absolute top-0 left-0 w-32 h-56 bg-gradient-to-b from-gray-800 to-gray-900 rounded-2xl border-4 border-gray-700 transform rotate-12">
                    <div className="w-full h-full bg-green-500/20 rounded-xl m-1"></div>
                  </div>
                  <div className="absolute top-4 left-8 w-32 h-56 bg-gradient-to-b from-gray-800 to-gray-900 rounded-2xl border-4 border-gray-700 transform -rotate-12">
                    <div className="w-full h-full bg-blue-500/20 rounded-xl m-1"></div>
                  </div>
                  {/* Security shield overlay */}
                  <div className="absolute top-20 left-16 w-16 h-16 bg-red-500/20 rounded-full flex items-center justify-center animate-pulse">
                    <Shield className="h-8 w-8 text-white" />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Platform Testing */}
      <section className="py-20 px-4 bg-white">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">Mobile Platform Testing</h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Specialized security testing for all major mobile platforms and frameworks.
            </p>
          </div>

          <Tabs defaultValue="android" className="w-full">
            <TabsList className="grid w-full grid-cols-3 mb-8">
              {platforms.map((platform) => (
                <TabsTrigger key={platform.id} value={platform.id}>
                  {platform.title.split(' ')[0]}
                </TabsTrigger>
              ))}
            </TabsList>

            {platforms.map((platform) => (
              <TabsContent key={platform.id} value={platform.id}>
                <Card>
                  <CardHeader>
                    <div className="flex items-center gap-4">
                      <div className="p-3 bg-gray-100 rounded-full">{platform.icon}</div>
                      <div>
                        <CardTitle className="text-2xl">{platform.title}</CardTitle>
                        <CardDescription className="text-lg">{platform.description}</CardDescription>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent className="space-y-6">
                    <div>
                      <h4 className="font-semibold mb-4">Common Vulnerabilities:</h4>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                        {platform.vulnerabilities.map((vuln, index) => (
                          <div key={index} className="flex items-start">
                            <div className="mr-2 mt-1.5 h-1.5 w-1.5 rounded-full bg-red-600"></div>
                            <span className="text-sm">{vuln}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                    
                    <div>
                      <h4 className="font-semibold mb-4">Specialized Tools:</h4>
                      <div className="flex flex-wrap gap-2">
                        {platform.tools.map((tool, index) => (
                          <Badge key={index} variant="outline" className="text-xs">
                            {tool}
                          </Badge>
                        ))}
                      </div>
                    </div>
                  </CardContent>
                  <CardFooter>
                    <Button asChild>
                      <Link href="/contact">Request {platform.title}</Link>
                    </Button>
                  </CardFooter>
                </Card>
              </TabsContent>
            ))}
          </Tabs>
        </div>
      </section>

      {/* Free App Analysis Demo */}
      <section id="demo" className="py-20 px-4 bg-gray-50">
        <div className="container mx-auto max-w-4xl">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">Free Mobile App Security Analysis</h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Upload your mobile application (APK or IPA) for a basic security assessment using our automated tools.
            </p>
          </div>

          <Card>
            <CardContent className="p-6">
              <div className="space-y-6">
                <div className="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center">
                  <input
                    type="file"
                    id="app-upload"
                    className="hidden"
                    accept=".apk,.ipa"
                    onChange={handleFileUpload}
                  />
                  <label htmlFor="app-upload" className="flex flex-col items-center justify-center cursor-pointer">
                    <Upload className="h-12 w-12 text-gray-400 mb-4" />
                    <h3 className="text-lg font-medium mb-2">Upload Mobile Application</h3>
                    <p className="text-sm text-gray-500 mb-4">
                      Select an APK (Android) or IPA (iOS) file for security analysis
                    </p>
                    <Button type="button" variant="outline">
                      Select App File
                    </Button>
                  </label>
                </div>

                {selectedFile && (
                  <div className="bg-blue-50 p-4 rounded-lg">
                    <div className="flex items-center justify-between">
                      <div>
                        <p className="font-medium">Selected file: {selectedFile.name}</p>
                        <p className="text-sm text-gray-600">
                          Size: {(selectedFile.size / 1024 / 1024).toFixed(2)} MB
                        </p>
                      </div>
                      <Button 
                        onClick={handleAnalysis}
                        disabled={isAnalyzing}
                        className="bg-red-600 hover:bg-red-700"
                      >
                        {isAnalyzing ? "Analyzing..." : "Start Analysis"}
                      </Button>
                    </div>
                  </div>
                )}

                {analysisResults && (
                  <div className="mt-8 border-t pt-8">
                    <div className="flex items-center justify-between mb-6">
                      <h3 className="text-xl font-bold">Analysis Results</h3>
                      <div className="flex items-center">
                        <Badge variant="outline" className="mr-4">
                          Platform: {analysisResults.platform}
                        </Badge>
                        <span className="text-sm text-gray-500 mr-2">Risk Score:</span>
                        <div className="w-32 bg-gray-200 rounded-full h-2.5">
                          <div
                            className={`h-2.5 rounded-full ${
                              analysisResults.riskScore >= 80 ? 'bg-red-500' : 
                              analysisResults.riskScore >= 60 ? 'bg-orange-500' : 'bg-yellow-500'
                            }`}
                            style={{ width: `${analysisResults.riskScore}%` }}
                          ></div>
                        </div>
                        <span className="ml-2 font-medium">{analysisResults.riskScore}/100</span>
                      </div>
                    </div>

                    <div className="space-y-4">
                      <h4 className="font-semibold">Security Issues Found:</h4>
                      {analysisResults.vulnerabilities.map((vuln, index) => (
                        <div key={index} className="bg-white p-4 rounded-lg border-l-4 border-l-red-500">
                          <div className="flex items-start justify-between">
                            <div className="flex-1">
                              <div className="flex items-center mb-2">
                                <Badge className={`text-xs ${getSeverityColor(vuln.severity)}`}>
                                  {vuln.severity}
                                </Badge>
                                <span className="ml-2 font-medium">{vuln.title}</span>
                                <Badge variant="outline" className="ml-auto text-xs">
                                  {vuln.category}
                                </Badge>
                              </div>
                              <p className="text-sm text-gray-600">{vuln.description}</p>
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>

                    <div className="mt-6 flex justify-center">
                      <Button variant="outline" className="flex items-center">
                        <Download className="mr-2 h-4 w-4" />
                        Download Detailed Report
                      </Button>
                    </div>
                  </div>
                )}
              </div>
            </CardContent>
          </Card>
        </div>
      </section>

      {/* Testing Categories */}
      <section className="py-20 px-4 bg-white">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">Comprehensive Testing Approach</h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Multi-layered security testing combining automated tools with expert manual analysis.
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {testingCategories.map((category, index) => (
              <Card key={index} className="h-full">
                <CardHeader>
                  <div className="w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mb-4">
                    <Lock className="h-6 w-6 text-red-600" />
                  </div>
                  <CardTitle className="text-xl">{category.category}</CardTitle>
                  <CardDescription>{category.description}</CardDescription>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2">
                    {category.tests.map((test, i) => (
                      <li key={i} className="flex items-start text-sm">
                        <CheckCircle className="h-3 w-3 text-green-600 mr-2 mt-1 flex-shrink-0" />
                        <span>{test}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Tools & Technologies */}
      <section className="py-20 px-4 bg-gray-50">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">Professional Mobile Security Tools</h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Industry-leading tools for comprehensive mobile application security testing.
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 gap-8">
            {tools.map((tool, index) => (
              <Card key={index} className="text-center hover:shadow-lg transition-shadow">
                <CardContent className="p-6">
                  <Image
                    src={tool.logo || "/placeholder.svg"}
                    alt={`${tool.name} logo`}
                    width={120}
                    height={60}
                    className="h-12 object-contain mx-auto mb-3"
                  />
                  <h3 className="font-semibold text-sm mb-1">{tool.name}</h3>
                  <p className="text-xs text-gray-500">{tool.category}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Pricing */}
      <section id="pricing" className="py-20 px-4 bg-white">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4">Mobile Security Testing Pricing</h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Professional mobile application security testing services with transparent pricing.
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {pricingTiers.map((tier, index) => (
              <Card key={index} className={`relative ${tier.popular ? "border-red-500 shadow-lg" : ""}`}>
                {tier.popular && (
                  <div className="absolute top-0 right-0 transform translate-x-2 -translate-y-2">
                    <Badge className="bg-red-500">Most Popular</Badge>
                  </div>
                )}
                <CardHeader>
                  <CardTitle>{tier.name}</CardTitle>
                  <CardDescription>{tier.description}</CardDescription>
                  <div className="mt-4">
                    <span className="text-3xl font-bold">{tier.price}</span>
                    <span className="text-gray-500 ml-2">{tier.period}</span>
                  </div>
                </CardHeader>
                <CardContent>
                  <ul className="space-y-2">
                    {tier.features.map((feature, i) => (
                      <li key={i} className="flex items-start">
                        <CheckCircle className="h-4 w-4 text-green-600 mr-2 mt-0.5 flex-shrink-0" />
                        <span className="text-sm">{feature}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
                <CardFooter>
                  <Button asChild className={`w-full ${tier.popular ? "bg-red-600 hover:bg-red-700" : ""}`}>
                    <Link href="/contact">{tier.cta}</Link>
                  </Button>
                </CardFooter>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 px-4 bg-gradient-to-br from-[#1A1A1A] to-[#3A0000] text-white">
        <div className="container mx-auto max-w-4xl text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-6">Secure Your Mobile Applications</h2>
          <p className="text-xl mb-8 max-w-2xl mx-auto">
            Don't let mobile vulnerabilities compromise your users' data. Get professional mobile application penetration testing from certified security experts.
          </p>
          <Button asChild size="lg" variant="destructive" className="group">
            <Link href="/contact">
              Schedule Mobile App Security Test
              <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
            </Link>
          </Button>
        </div>
      </section>
    </main>
  )
}